version: '3.8'

services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "product-updates:1:1,price-changes:1:1,notifications:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  crawler:
    build:
      context: ./crawler
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: ecommerce
      SERVER_PORT: 50051
      PRODUCT_ANALYSIS_SERVICE_ADDR: product-analysis:50051
      KAFKA_BROKERS: kafka:9092
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      # product-analysis:
      #   condition: service_started

  # product-analysis:
  #   build:
  #     context: ./product-analysis
  #   environment:
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASS: postgres
  #     DB_NAME: ecommerce
  #     SERVER_PORT: 50051
  #     KAFKA_BROKERS: kafka:9092
  #   ports:
  #     - "50051:50051"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     kafka:
  #       condition: service_started

  # notification:
  #   build:
  #     context: ./notification
  #   environment:
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_USER: postgres
  #     DB_PASS: postgres
  #     DB_NAME: ecommerce
  #     SERVER_PORT: 8082
  #     KAFKA_BROKERS: kafka:9092
  #   ports:
  #     - "8082:8082"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     kafka:
  #       condition: service_started

volumes:
  postgres_data: